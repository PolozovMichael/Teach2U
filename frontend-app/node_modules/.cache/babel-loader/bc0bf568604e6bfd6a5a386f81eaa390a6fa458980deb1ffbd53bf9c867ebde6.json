{"ast":null,"code":"import axios from 'axios';\nconst baseURL = 'http://127.0.0.1:8000/api/';\nconst axiosInstance = axios.create({\n  baseURL: baseURL,\n  timeout: 5000,\n  headers: {\n    Authorization: localStorage.getItem('access_token') ? 'Bearer ' + localStorage.getItem('access_token') : null,\n    'Content-Type': 'application/json',\n    accept: 'application/json'\n  }\n});\naxiosInstance.interceptors.response.use(response => {\n  return response;\n}, async function (error) {\n  const originalRequest = error.config;\n  if (typeof error.response === 'undefined') {\n    alert('A server/network error occurred. ' + 'Looks like CORS might be the problem. ' + 'Sorry about this - we will get it fixed shortly.');\n    return Promise.reject(error);\n  }\n  if (error.response.status === 401 && originalRequest.url === baseURL + 'token/refresh/') {\n    window.location.href = '/login/';\n    return Promise.reject(error);\n  }\n  if (error.response.data.code === 'token_not_valid' && error.response.status === 401 && error.response.statusText === 'Unauthorized') {\n    const refreshToken = localStorage.getItem('refresh_token');\n    if (refreshToken) {\n      const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\n      const now = Math.ceil(Date.now() / 1000);\n      console.log(tokenParts.exp);\n      if (tokenParts.exp > now) {\n        return axiosInstance.post('/token/refresh/', {\n          refresh: refreshToken\n        }).then(response => {\n          localStorage.setItem('access_token', response.data.access);\n          localStorage.setItem('refresh_token', response.data.refresh);\n          console.log('Token have been refresheds', response);\n          axiosInstance.defaults.headers['Authorization'] = 'Bearer ' + response.data.access;\n          originalRequest.headers['Authorization'] = 'Bearer ' + response.data.access;\n          return axiosInstance(originalRequest);\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        console.log('Refresh token is expired', tokenParts.exp, now);\n        window.location.href = '/login';\n      }\n    } else {\n      console.log('Refresh token not available.');\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","baseURL","axiosInstance","create","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","alert","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","console","log","exp","post","refresh","then","setItem","access","defaults","catch","err"],"sources":["D:/Teach2U/Teach2U-Den/Teach2U/frontend-app/src/axios.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseURL = 'http://127.0.0.1:8000/api/';\r\n\r\nconst axiosInstance = axios.create({\r\n\tbaseURL: baseURL,\r\n\ttimeout: 5000,\r\n\theaders: {\r\n\t\tAuthorization: localStorage.getItem('access_token')\r\n\t\t\t? 'Bearer ' + localStorage.getItem('access_token')\r\n\t\t\t: null,\r\n\t\t'Content-Type': 'application/json',\r\n\t\taccept: 'application/json',\r\n\t}, \r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n\t(response) => {\r\n\t\treturn response;\r\n\t},\r\n\tasync function (error) {\r\n\t\tconst originalRequest = error.config;\r\n\t\tif (typeof error.response === 'undefined') {\r\n\t\t\talert(\r\n\t\t\t\t'A server/network error occurred. ' +\r\n\t\t\t\t\t'Looks like CORS might be the problem. ' +\r\n\t\t\t\t\t'Sorry about this - we will get it fixed shortly.'\r\n\t\t\t);\r\n\t\t\treturn Promise.reject(error);\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\terror.response.status === 401 &&\r\n\t\t\toriginalRequest.url === baseURL + 'token/refresh/'\r\n\t\t) {\r\n\t\t\twindow.location.href = '/login/';\r\n\t\t\treturn Promise.reject(error);\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\terror.response.data.code === 'token_not_valid' &&\r\n\t\t\terror.response.status === 401 &&\r\n\t\t\terror.response.statusText === 'Unauthorized'\r\n\t\t) {\r\n\t\t\tconst refreshToken = localStorage.getItem('refresh_token');\r\n\r\n\t\t\tif (refreshToken) {\r\n\t\t\t\tconst tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n\t\t\t\tconst now = Math.ceil(Date.now() / 1000);\r\n\t\t\t\tconsole.log(tokenParts.exp);\r\n\r\n\t\t\t\tif (tokenParts.exp > now) {\r\n\t\t\t\t\treturn axiosInstance\r\n\t\t\t\t\t\t.post('/token/refresh/', { refresh: refreshToken })\r\n\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\tlocalStorage.setItem('access_token', response.data.access);\r\n\t\t\t\t\t\t\tlocalStorage.setItem('refresh_token', response.data.refresh);\r\n                            console.log('Token have been refresheds', response)\r\n\t\t\t\t\t\t\taxiosInstance.defaults.headers['Authorization'] =\r\n\t\t\t\t\t\t\t\t'Bearer ' + response.data.access;\r\n\t\t\t\t\t\t\toriginalRequest.headers['Authorization'] =\r\n\t\t\t\t\t\t\t\t'Bearer ' + response.data.access;\r\n\r\n\t\t\t\t\t\t\treturn axiosInstance(originalRequest);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Refresh token is expired', tokenParts.exp, now);\r\n\t\t\t\t\twindow.location.href = '/login';\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Refresh token not available.');\r\n\t\t\t\twindow.location.href = '/login';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n\r\nexport default axiosInstance;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}